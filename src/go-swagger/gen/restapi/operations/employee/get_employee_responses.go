// Code generated by go-swagger; DO NOT EDIT.

package employee

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/benrowe/demo-web-services/src/go-swagger/gen/models"
)

// GetEmployeeOKCode is the HTTP code returned for type GetEmployeeOK
const GetEmployeeOKCode int = 200

/*GetEmployeeOK find employee by id

swagger:response getEmployeeOK
*/
type GetEmployeeOK struct {

	/*
	  In: Body
	*/
	Payload *models.Employee `json:"body,omitempty"`
}

// NewGetEmployeeOK creates GetEmployeeOK with default headers values
func NewGetEmployeeOK() *GetEmployeeOK {

	return &GetEmployeeOK{}
}

// WithPayload adds the payload to the get employee o k response
func (o *GetEmployeeOK) WithPayload(payload *models.Employee) *GetEmployeeOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get employee o k response
func (o *GetEmployeeOK) SetPayload(payload *models.Employee) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetEmployeeOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetEmployeeNotFoundCode is the HTTP code returned for type GetEmployeeNotFound
const GetEmployeeNotFoundCode int = 404

/*GetEmployeeNotFound employee not found

swagger:response getEmployeeNotFound
*/
type GetEmployeeNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetEmployeeNotFound creates GetEmployeeNotFound with default headers values
func NewGetEmployeeNotFound() *GetEmployeeNotFound {

	return &GetEmployeeNotFound{}
}

// WithPayload adds the payload to the get employee not found response
func (o *GetEmployeeNotFound) WithPayload(payload *models.Error) *GetEmployeeNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get employee not found response
func (o *GetEmployeeNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetEmployeeNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
